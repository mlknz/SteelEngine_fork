#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_GOOGLE_include_directive : require

#define SHADER_STAGE intersect
#pragma shader_stage(intersect)

#include "Common/RayTracing.glsl"

layout(push_constant) uniform PushConstants{
    layout(offset = 20) float pointLightsRadius;
};

#define MAX_POINT_LIGHT_RADIUS 4.0;

void main()
{
    Sphere sphere;
    sphere.center = vec3(0.0);
    sphere.radius = 0.5 * pointLightsRadius / MAX_POINT_LIGHT_RADIUS;

    Ray ray;
    ray.origin = gl_ObjectRayOriginEXT;
    ray.direction = gl_ObjectRayDirectionEXT;

    const float hitT = SphereIntersection(sphere, ray);

    if (IsHit(hitT))
    {
        reportIntersectionEXT(hitT, 0);
    }
}
